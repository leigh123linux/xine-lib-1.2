.\" -*-Nroff-*-
.\""
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.TH XINE 5 2005-06-15 "The xine project"
.\" NAME should be all caps, SECTION should be 1-8, maybe w/ subsection
.\" other parms are allowed: see man(7), man(1)
.\""
.SH NAME
xine \- a free video player
.SH MRL (media resource locator)
MRLs are similar to URLs in your web browser. They describe the media
to read from. valid MRLs may be plain file names or one of the following:
.TP
\ 
.br
.BI file: <path>
.br
.BI fifo: <path>
.br
.BI stdin:/
.br
.BI dvd:/[<title>.<part>]
.br
.BI vcd://[<CD-disk-image>|<device-name>][@[letter]<number>]
.br
.BI tcp://<host>:<port>
.br
.BI rtp://<host>:<port>
.br
.BI udp://<host>:<port><?iface=interface>
.br
.BI mms://<host>...
.br
.BI http://<host>...
.br
.BI cdda://<track-number>
.LP
Several MRLs may be specified in order to play a number of consecutive
streams. Additional input plugins will provide additional MRL types. The ones
listed above are available with stock libxine...
.br
.SS VCD MRL Syntax
A simple \fBvcd:/\fP runs the default item (e.g. perhaps track 1 or entry 0)
using the default VCD device (perhaps /dev/cdrom). Both the default item and
default device are user-configurable.

It is however also possible to specify both Video CD device/filename and item
explicitly in the MRL.

For example \fBvcd:/dev/dvd\fP specifies the default entry using device
/dev/dvd which might useful if this is your DVD which is different than your
CD-ROM device and your DVD drive can play CD's. And
\fBvcd://test_svcd_ntsc.cue\fP specifies the cue file for CD image on disk.
(test_svcd_ntsc.bin is the corresponding bin file, but using that won't
work.)

After the optional device name or file name, you can name the kind of unit,
preceded by a colon. An MRL which ends in a colon is like not adding it at
all: the default entry type and number is used. Items come in 4 flavours:
\fB"Track"\fP, \fB"Entry"\fP, \fB"Playback"\fP and \fB"Segment"\fP. These
units are indicated with the capital first letter of each type: \fBT\fP,
\fBE\fP, \fBP\fP, \fBS\fP, \fBs\fP. An uppercase \fBS\fP in the MRL display
indicates a NTS segment while a lowercase \fBS\fP indicates a PAL segment.
However when you enter an MRL, the case of these letters is insignificant.

Depending on the Video CD, you might not have any playable segments
(\fBS\fP,\fBs\fP) or playback control (\fBP\fP).  If you give a MRL that
refers to a playback control entry but there is no playback control, your
playback number will silently be converted into the corresponding entry
number.

You can configure various things that affect MRLs are selected when there is
some ambiguity in the MRL name. \fImedia.vcd.autoplay\fP sets what kind of
unit to to use in a MRL is none is given.  Another configuration setting,
\fIvcd.device\fP, determines what device to use if that part is not given.
When you hit the VCD button, that is equivalent to entering \fBvcd:/\fP and
thus these two configuration settings are used to expand the MRL.

Some examples of MRLS are given below. In the examples, we assume the
following configuration settings:

.TP
.BI vcd://
Play (navigate) default item (in this case Entry ID 0) from the default
device (in this case set to /dev/cdrom)
.TP
.BI vcd://@
Same as above
.TP
.BI vcd:///dev/cdrom@
Same effect as above since the default device is set to /dev/cdrom.
.TP
.BI vcd:///dev/cdrom@E0
Same as above. But note that this is because we have autoplay:entry which is
no longer the default value.
.TP
.BI vcd:///dev/cdrom2@
Play (navigate) the default item of /dev/cdrom2
.TP
.BI vcd:///dev/cdrom2
should be same as above but is currently broken?
.TP
.BI vcd:///dev/cdrom2@T1
Play Track 1 from /dev/cdrom2
.TP
.BI vcd:///dev/cdrom@S1
Play segment 1 from /dev/cdrom. This assumes there *is* a segment 1. Check
the MRL list to see if that is the case.
.TP
.BI vcd://@P1
Play playlist item 1 from default device. If there is no playback control,
MRL will get converted into vcd:/:E0.
Again check the MRL list to see if there is a P1.
.TP
.BI vcd://@P1*
Probably same as above.
.TP
.BI vcd:///dev/cdrom@E1
Play Entry id 1 from default device.
.TP
.BI vcd://@S0
Play segment 0 from default device.
.TP
.BI vcd://@3
Play track 3 from default device.
.TP
.BI vcd:///dev/cdrom2:1
Play track 1 from /dev/cdrom2.
.TP
.BI vcd:///tmp/ntsc.cue@
Play default item (E0) of /tmp/ntsc.bin. Note trailing \fB@\fP.
.TP
.BI vcd://ntsc.cue/@E0
Play entry 0 of ntsc.bin.
.TP
.BI vcd:///tmp/ntsc.nrg/@E0
Play entry 0 of /tmp/ntsc.nrg (Nero file). Works for some simple Nero images.
.br
.SH SUBTITLE
.B external subtitle files (any mrl)
.br
Text subtitle files may be appended to the MRL:.
.TP
.BI <mrl>#subtitle:<subtitlefile>
This is the normal way to define the subtitle file to use. The frontend will
not take any notice of the subtitle file.
.br
.SH STREAM OPTIONS
.br
After a delimiting \fB#\fP you can add several stream parameters:
.TP
.B novideo
Video will be ignored.
.TP
.B noaudio
Audio will be ignored.
.TP
.B nospu
Subpictures will be ignored.
.TP
.BI demux: <demux\ name>
Specify the demux plugin to use.
.TP
.BI volume: <level>
Set audio volume.
.TP
.BI compression: <level>
Set audio dynamic range compression.
.TP
.BI <config\ entry> : <config\ value>
Assign a new value to any config entry.
.TP
.B change configuration option 'on the fly':
.br
You can change a configuration option at any time, using the special
.B cfg:/
MRL style. The syntax is:
.br
	cfg:/<config\ entry> : <config\ value>
.br
Unlike stream config option, you can change anything \fIbefore\fP playing the
stream.

.SH "SEE ALSO"
\fBxine\fP(1), \fBaaxine\fP(1), \fBgxine\fP(1), \fBtoxine\fP(1),
\fBtotem\fP(1), \fBkaffeine\fP(1) ...

.br
The programs are documented fully on the xine home page:
.UR http://xinehq.de/
.IR "http://xinehq.de/"
.UE
.SH AUTHOR
This text was extracted from the xine man page by Darren Salt
<dsalt@users.sourceforge.net>.
The xine man page was written by Siggi Langauf <siggi@debian.org> for the
xine project.
Lots of additions by
Guenter Bartsch <guenter@users.sourceforge.net>,
Daniel Caujolle-Bert <f1rmb@users.sourceforge.net>,
Rocky Bernstein <rocky@panix.com>, and
Philipp Hahn <pmhahn@users.sourceforge.net>.
